<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/argo-appsets/templates/appsets.yaml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/argo-appsets/templates/appsets.yaml" />
              <option name="originalContent" value="{{- range .Values.appSets }}&#10;apiVersion: argoproj.io/v1alpha1&#10;kind: ApplicationSet&#10;metadata:&#10;  name: {{ .name }}&#10;  namespace: {{ .namespace | default &quot;argocd&quot; }}&#10;spec:&#10;  goTemplate: true&#10;  goTemplateOptions: [&quot;missingkey=error&quot;]&#10;  generators:&#10;    - scmProvider:&#10;        cloneProtocol: https&#10;        filters:&#10;          {{- range .filters }}&#10;          - branchMatch: {{ .branchMatch | quote }}&#10;            {{- if .pathsExist }}&#10;            pathsExist:&#10;              {{- range .pathsExist }}&#10;              - {{ . | quote }}&#10;              {{- end }}&#10;            {{- end }}&#10;          {{- end }}&#10;        github:&#10;          organization: {{ .githubOrg | default &quot;mdefenders&quot; }}&#10;          allBranches: true&#10;          tokenRef:&#10;            secretName: github-token&#10;            key: token&#10;  template:&#10;    metadata:&#10;      name: '{{`{{ .repository }}`}}-{{`{{ .branchNormalized }}`}}'&#10;    spec:&#10;      project: default&#10;      source:&#10;        repoURL: '{{`{{ .url }}`}}'&#10;        targetRevision: '{{`{{ .branch }}`}}'&#10;        chartPath: {{ .chartPath | default &quot;deploy/charts/app&quot; | quote }}&#10;        helm:&#10;          valueFiles:&#10;            {{- range .valueFiles }}&#10;            - {{ . | quote }}&#10;            {{- end }}&#10;      destination:&#10;        server: https://kubernetes.default.svc&#10;        namespace: '{{`{{ .repository }}`}}-{{`{{ regexReplaceAll &quot;[^a-z0-9-]&quot; (lower .branchNormalized) &quot;-&quot; }}`}}'&#10;      syncPolicy:&#10;        automated:&#10;          prune: true&#10;          selfHeal: true&#10;        syncOptions:&#10;          - CreateNamespace=true&#10;          - PruneLast=true&#10;          - PrunePropagationPolicy=foreground&#10;---&#10;{{- end }}" />
              <option name="updatedContent" value="{{- range .Values.appSets }}&#10;apiVersion: argoproj.io/v1alpha1&#10;kind: ApplicationSet&#10;metadata:&#10;  name: {{ .name }}&#10;  namespace: {{ .namespace | default &quot;argocd&quot; }}&#10;spec:&#10;  goTemplate: true&#10;  goTemplateOptions: [&quot;missingkey=error&quot;]&#10;  generators:&#10;    - scmProvider:&#10;        cloneProtocol: https&#10;        filters:&#10;          {{- range .filters }}&#10;          - branchMatch: {{ .branchMatch | quote }}&#10;            {{- if .pathsExist }}&#10;            pathsExist:&#10;              {{- range .pathsExist }}&#10;              - {{ . | quote }}&#10;              {{- end }}&#10;            {{- end }}&#10;          {{- end }}&#10;        github:&#10;          organization: {{ .githubOrg | default &quot;mdefenders&quot; }}&#10;          allBranches: true&#10;          tokenRef:&#10;            secretName: github-token&#10;            key: token&#10;  template:&#10;    metadata:&#10;      name: '{{`{{ .repository }}`}}-{{`{{ .branchNormalized }}`}}'&#10;    spec:&#10;      project: default&#10;      source:&#10;        repoURL: '{{`{{ .url }}`}}'&#10;        targetRevision: '{{`{{ .branch }}`}}'&#10;        chartPath: {{ .chartPath | default &quot;deploy/charts/app&quot; | quote }}&#10;        helm:&#10;          valueFiles:&#10;            {{- range .valueFiles }}&#10;            - {{ . | quote }}&#10;            {{- end }}&#10;      destination:&#10;        server: https://kubernetes.default.svc&#10;        namespace: '{{`{{ .repository }}`}}-{{`{{ regexReplaceAll &quot;[^a-z0-9-]&quot; (lower .branchNormalized) &quot;-&quot; }}`}}'&#10;      syncPolicy:&#10;        automated:&#10;          prune: true&#10;          selfHeal: true&#10;        syncOptions:&#10;          - CreateNamespace=true&#10;          - PruneLast=true&#10;          - PrunePropagationPolicy=foreground&#10;---&#10;{{- end }}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/argo-appsets/values.default.yaml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/argo-appsets/values.default.yaml" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/argo-appsets/values.yaml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/argo-appsets/values.yaml" />
              <option name="originalContent" value="appSets:&#10;  - name : it-delivers-everywhere-features&#10;    namespace: argocd&#10;    githubOrg: mdefenders&#10;    chartPath: &quot;deploy/charts/app&quot;&#10;    valueFiles:&#10;      - ../../environments/dev/values.yaml&#10;    filters:&#10;      - branchMatch: &quot;^feature/.*$&quot;&#10;        pathsExist:&#10;          - &quot;deploy/charts/app&quot;&#10;          - &quot;deploy/environments/dev/values.yaml&quot;&#10;" />
              <option name="updatedContent" value="appSets:&#10;  - name : it-delivers-everywhere-features&#10;    namespace: argocd&#10;    githubOrg: mdefenders&#10;    chartPath: &quot;deploy/charts/app&quot;&#10;    valueFiles:&#10;      - ../../environments/dev/values.yaml&#10;    filters:&#10;      - branchMatch: &quot;^feature/.*$&quot;&#10;        pathsExist:&#10;          - &quot;deploy/charts/app&quot;&#10;          - &quot;deploy/environments/dev/values.yaml&quot;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>